<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-Mapper.dtd">

<mapper namespace="com.kaishengit.mapper.UserMapper">

<!-- 
	根据id查询User对象
	id：类似方法名
	parameterType:参数类型（可选）
	resultType:返回值类型（可选）
 -->
 <select id="findById" parameterType="int" resultType="User">
 	select * from t_user where id = #{id}
 </select> 
 
 <select id="findAll" resultType="User">
 	select * from t_user
 </select>
 
 <select id="findAllLoadDept" resultType="User">
 	SELECT
	t_user.id,
	user_name,
	address,
	dept_id,
	t_dept.id AS `dept.id`,
	t_dept.dept_Name AS `dept.deptName`
FROM
	t_user,
	t_dept
WHERE
	dept_Id = t_dept.id;
 </select>
 
 <!-- <select id="findAllLoadDept" resultMap="userMap">
 	SELECT
	t_user.id,
	user_name,
	address,
	dept_Id,
	dept_Name
FROM
	t_user,
	t_dept
WHERE
	t_user.dept_Id = t_dept.id;
 
 </select> -->
 
 <!-- 自定义结果集映射,告诉MyBatis如何将列和类的属性对应 -->
 
 <!--  <resultMap type="User" id="userMap">
  	<id column="id" property="id"/>
  	<result column="user_name" property="userName"/>
  	<result column="address" property="address"/>
  	<result column="dept_Id" property="deptId"/>
  	<association property="dept" javaType="Dept">
  		<id column="dept_Id" property="id"/>
  		<result column="dept_Name" property="deptName"/>
  	</association>
	
  </resultMap>  -->
 
 <insert id="save" parameterType="User">
 	insert into t_user(user_name,address) values(#{userName},#{address})
 </insert>
 
 <update id="update" parameterType="User">
 	update t_user set user_name = #{userName},address = #{address} where id = #{id}
 </update>
 
 <delete id="delete" parameterType="int">
 	delete from t_user where id=#{id}
 </delete>

	
</mapper>